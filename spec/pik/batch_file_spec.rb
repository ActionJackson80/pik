
describe Pik::BatchFile do

  before do
    @bf = Pik::BatchFile.new('pik')
  end

	it "should have the correct file name" do
		@bf.path.to_s.should == 'pik.bat'

    bf2 = Pik::BatchFile.new('pik.bat')
    bf2.path.to_s.should == 'pik.bat'
	end

	it "should have a header" do
		string =  "@ECHO OFF\n\n" 
		string << "::  This batch file generated by Pik, the\n"
		string << "::  Ruby Manager for Windows\n"	
		@bf.to_s.should == string	
	end

  it "should generate a path command with the updated ruby path" do
		@bf.set('PATH' => "C:\\ruby\\191\\bin").to_s.should match(/SET PATH\=C:\\ruby\\191\\bin/)
    @bf.set('GEM_HOME' => nil).to_s.should match(/SET GEM_HOME\=/)
	end

  it "should echo a string given" do 
    @bf.echo("Hello World").to_s.should match(/ECHO Hello World/)
  end

  it "should call the command given" do 
    @bf.call('pik.bat').to_s.should match(/CALL pik\.bat/)
  end
	
end
