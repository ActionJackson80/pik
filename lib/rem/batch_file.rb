
class BatchFile

	attr_accessor :file_data

	def initialize(ruby_exe, file_name='rem.bat')
		ruby_exe   = File.expand_path(ruby_exe)
		@ruby_exe  = File.basename(ruby_exe)
		@bin_dir   = WindowsFile.join(File.dirname(ruby_exe))
		@rubyw_exe = 'rubyw.exe'
		@file_name = file_name 
		@file_data = header
		yield self if block_given?
	end

	def header
		string =  "@ECHO OFF\n\n" 
		string << "::  This batch file generated by REM, the\n"
		string << "::  Ruby Equipment Manager for Windows\n\n"	
	end	

	def set_path
		path = SearchPath.new(ENV['PATH']).replace_or_add(/ruby/i, @bin_dir)
		r = "SET PATH=#{path}\n\n"
		@file_data << r
		r
	end
	
	def ftype
		files = { :rbfile => @ruby_exe, :rbwfile => @rubyw_exe }
		str = ''
		files.map do |filetype, open_with|
			str << 	"FTYPE #{filetype}=#{open_with} \"%1\" %*\n\n"
		end
		@file_data << str
		str
	end

	def full_path_to(exe)
		WindowsFile.join(@bin_dir, exe)
	end

	def to_s
		@file_data
	end

	def write
		File.open(File.join(REM_HOME, @file.name), 'w'){|f| f.puts @file_data }
	end

end
